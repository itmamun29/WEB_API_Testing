{
	"info": {
		"_postman_id": "e9659a79-6bcc-4c32-8cad-194c658568a7",
		"name": "Reqres",
		"description": "_**It is web api testing.**_\n\nwhat i do...\n\n1. Testing verious types of HTTP request.\n    \n2. Set up collection level variable, Like (URL & Api_Key)\n    \n3. Make assertion (check point).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "44888422",
		"_collection_link": "https://mamun-2196736.postman.co/workspace/mamun's-Workspace~13a2c1fe-dc3c-45c1-8031-edb266bbe063/collection/44888422-e9659a79-6bcc-4c32-8cad-194c658568a7?action=share&source=collection_link&creator=44888422"
	},
	"item": [
		{
			"name": "List user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify status code is - 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"verify the response time below - 150ms\", () =>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(150);\r",
							"});\r",
							"\r",
							"pm.test(\"check the Content-Type header is present\", () => {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users?page=2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Single user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"check the respons time is 350ms\", () => {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(350);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single user not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the status code is 404\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Check the status Not Found\", () => {\r",
							"    pm.response.to.have.status(\"Not Found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/api/users/23",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"api",
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "List Resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify status code is - 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"verify the response time below - 150ms\", () =>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(150);\r",
							"});\r",
							"\r",
							"pm.test(\"check the Content-Type header is present\", () => {\r",
							"    pm.response.to.have.header(\"Content-Type\");\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/unknown",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single resource",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"verify status code is - 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"verify the response time below - 150ms\", () =>{\r",
							"    pm.expect(pm.response.responseTime).to.be.below(150);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/unknown/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"unknown",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Single resource not found",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check status code is 404\", () =>{\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Check status Text is Not Found\", () =>{\r",
							"    pm.response.to.have.status(\"Not Found\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/unknown/23",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"unknown",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successfull POST Status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/users",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Register",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check the response code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"check the response body has token\", () => {\r",
							"    let jsonData = pm.response.json();\r",
							"    pm.expect(jsonData).to.have.property(\"token\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/register",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successfull PUT Status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"PUT Status is ok\", () => {\r",
							"    pm.response.to.be.ok; // status is 2xx\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/users/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Successfull PUT Status code is 200\", () =>{\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"PUT Status is ok\", () => {\r",
							"    pm.response.to.be.ok; // status is 2xx\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{x-api-key}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"zion resident\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/user/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "x-api-key",
						"value": "{{base_url}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/user/2",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"user",
						"2"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://reqres.in/api",
			"type": "string"
		},
		{
			"key": "x-api-key",
			"value": "reqres-free-v1",
			"type": "string"
		}
	]
}